# Generated by Django 2.2.5 on 2019-10-22 23:30

import core.mixins
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=None,
            state_operations=[
                migrations.CreateModel(
                    name='SemaBaseVehicle',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('base_vehicle_id',
                         models.PositiveIntegerField(primary_key=True,
                                                     serialize=False,
                                                     unique=True)),
                    ],
                    options={
                        'verbose_name': 'SEMA base vehicle',
                        'ordering': ['make_year', 'model'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaBrand',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('brand_id',
                         models.CharField(max_length=10, primary_key=True,
                                          serialize=False, unique=True)),
                        ('name', models.CharField(max_length=50)),
                    ],
                    options={
                        'verbose_name': 'SEMA brand',
                        'ordering': ['name'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaCategory',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('category_id',
                         models.PositiveIntegerField(primary_key=True,
                                                     serialize=False,
                                                     unique=True)),
                        ('name', models.CharField(max_length=50)),
                        ('parent_categories',
                         models.ManyToManyField(blank=True,
                                                related_name='child_categories',
                                                to='sema.SemaCategory')),
                    ],
                    options={
                        'verbose_name': 'SEMA category',
                        'verbose_name_plural': 'SEMA categories',
                        'ordering': ['name'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaDataset',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('dataset_id',
                         models.PositiveIntegerField(primary_key=True,
                                                     serialize=False,
                                                     unique=True)),
                        ('name', models.CharField(max_length=50)),
                        ('brand', models.ForeignKey(
                            on_delete=django.db.models.deletion.CASCADE,
                            related_name='datasets', to='sema.SemaBrand')),
                    ],
                    options={
                        'verbose_name': 'SEMA dataset',
                        'ordering': ['name'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaMake',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('make_id',
                         models.PositiveIntegerField(primary_key=True,
                                                     serialize=False,
                                                     unique=True)),
                        ('name', models.CharField(max_length=50)),
                    ],
                    options={
                        'verbose_name': 'SEMA make',
                        'ordering': ['name'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaModel',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('model_id',
                         models.PositiveIntegerField(primary_key=True,
                                                     serialize=False,
                                                     unique=True)),
                        ('name', models.CharField(max_length=50)),
                    ],
                    options={
                        'verbose_name': 'SEMA model',
                        'ordering': ['name'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaSubmodel',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('submodel_id',
                         models.PositiveIntegerField(primary_key=True,
                                                     serialize=False,
                                                     unique=True)),
                        ('name', models.CharField(max_length=50)),
                    ],
                    options={
                        'verbose_name': 'SEMA submodel',
                        'ordering': ['name'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaYear',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('year',
                         models.PositiveSmallIntegerField(primary_key=True,
                                                          serialize=False,
                                                          unique=True)),
                    ],
                    options={
                        'verbose_name': 'SEMA year',
                        'ordering': ['year'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaVehicle',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('vehicle_id',
                         models.PositiveIntegerField(primary_key=True,
                                                     serialize=False,
                                                     unique=True)),
                        ('is_relevant', models.BooleanField(default=False)),
                        ('base_vehicle', models.ForeignKey(
                            on_delete=django.db.models.deletion.CASCADE,
                            related_name='vehicles',
                            to='sema.SemaBaseVehicle')),
                        ('submodel', models.ForeignKey(
                            on_delete=django.db.models.deletion.CASCADE,
                            related_name='vehicles', to='sema.SemaSubmodel')),
                    ],
                    options={
                        'verbose_name': 'SEMA vehicle',
                        'ordering': ['base_vehicle', 'submodel'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaProduct',
                    fields=[
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('product_id',
                         models.PositiveIntegerField(primary_key=True,
                                                     serialize=False,
                                                     unique=True)),
                        ('part_number', models.CharField(max_length=20)),
                        ('html',
                         models.TextField(blank=True, verbose_name='HTML')),
                        ('categories', models.ManyToManyField(blank=True,
                                                              related_name='products',
                                                              to='sema.SemaCategory')),
                        ('dataset', models.ForeignKey(
                            on_delete=django.db.models.deletion.CASCADE,
                            related_name='products', to='sema.SemaDataset')),
                        ('vehicles', models.ManyToManyField(blank=True,
                                                            related_name='products',
                                                            to='sema.SemaVehicle')),
                    ],
                    options={
                        'verbose_name': 'SEMA product',
                        'ordering': ['dataset', 'part_number'],
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.CreateModel(
                    name='SemaMakeYear',
                    fields=[
                        ('id',
                         models.AutoField(auto_created=True, primary_key=True,
                                          serialize=False, verbose_name='ID')),
                        ('is_authorized', models.BooleanField(default=False,
                                                              help_text='brand has given access to dataset')),
                        ('make', models.ForeignKey(
                            on_delete=django.db.models.deletion.CASCADE,
                            related_name='make_years', to='sema.SemaMake')),
                        ('year', models.ForeignKey(
                            on_delete=django.db.models.deletion.CASCADE,
                            related_name='make_years', to='sema.SemaYear')),
                    ],
                    options={
                        'verbose_name': 'SEMA make year',
                        'ordering': ['make', 'year'],
                        'unique_together': {('make', 'year')},
                    },
                    bases=(models.Model, core.mixins.MessagesMixin),
                ),
                migrations.AddField(
                    model_name='semabasevehicle',
                    name='make_year',
                    field=models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='base_vehicles', to='sema.SemaMakeYear'),
                ),
                migrations.AddField(
                    model_name='semabasevehicle',
                    name='model',
                    field=models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='base_vehicles', to='sema.SemaModel'),
                ),
            ],
        ),
    ]
